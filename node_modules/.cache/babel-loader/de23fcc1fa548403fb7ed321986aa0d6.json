{"ast":null,"code":"import { SAVE_LOGED_EMAIL } from '../actions'; // Esse reducer será responsável por tratar as informações da pessoa usuária\n\nconst INITIAL_STATE = {\n  user: {\n    email: ''\n  }\n};\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SAVE_LOGED_EMAIL:\n      return { ...state,\n        user: {\n          email: action.email\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"names":["SAVE_LOGED_EMAIL","INITIAL_STATE","user","email","userReducer","state","action","type"],"sources":["/home/alexandre/TRYBE/PROJETOS/sd-026-a-project-trybewallet/src/redux/reducers/user.js"],"sourcesContent":["import { SAVE_LOGED_EMAIL } from '../actions';\n\n// Esse reducer será responsável por tratar as informações da pessoa usuária\nconst INITIAL_STATE = {\n  user: {\n    email: '',\n  },\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SAVE_LOGED_EMAIL:\n    return {\n      ...state,\n      user: {\n        email: action.email,\n      },\n    };\n  default:\n    return state;\n  }\n};\n\nexport default userReducer;\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,YAAjC,C,CAEA;;AACA,MAAMC,aAAa,GAAG;EACpBC,IAAI,EAAE;IACJC,KAAK,EAAE;EADH;AADc,CAAtB;;AAMA,MAAMC,WAAW,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BJ,aAA0B;EAAA,IAAXK,MAAW;;EACrD,QAAQA,MAAM,CAACC,IAAf;IACA,KAAKP,gBAAL;MACE,OAAO,EACL,GAAGK,KADE;QAELH,IAAI,EAAE;UACJC,KAAK,EAAEG,MAAM,CAACH;QADV;MAFD,CAAP;;IAMF;MACE,OAAOE,KAAP;EATF;AAWD,CAZD;;AAcA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}