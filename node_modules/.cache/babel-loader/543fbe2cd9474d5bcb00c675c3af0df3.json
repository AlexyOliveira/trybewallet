{"ast":null,"code":"// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { DELETE_FROM_LIST, REQUEST_CURRENCIES_SUCCESS, SAVE_FORM } from '../actions';\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  expensetosum: [],\n  edit: true\n};\n\nconst wallet = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REQUEST_CURRENCIES_SUCCESS:\n      return { ...state,\n        currencies: [...action.response]\n      };\n\n    case SAVE_FORM:\n      return { ...state,\n        expenses: [...state.expenses, action.payload],\n        expensetosum: [action.payload]\n      };\n\n    case DELETE_FROM_LIST:\n      return { ...state,\n        expenses: state.expenses.filter(each => each.id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default wallet;","map":{"version":3,"names":["DELETE_FROM_LIST","REQUEST_CURRENCIES_SUCCESS","SAVE_FORM","INITIAL_STATE","currencies","expenses","expensetosum","edit","wallet","state","action","type","response","payload","filter","each","id"],"sources":["/home/alexandre/TRYBE/PROJETOS/sd-026-a-project-trybewallet/src/redux/reducers/wallet.js"],"sourcesContent":["// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { DELETE_FROM_LIST, REQUEST_CURRENCIES_SUCCESS, SAVE_FORM } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  expensetosum: [],\n  edit: true,\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_CURRENCIES_SUCCESS:\n    return {\n      ...state,\n      currencies: [...action.response],\n    };\n\n  case SAVE_FORM:\n    return {\n      ...state,\n      expenses: [...state.expenses, action.payload],\n      expensetosum: [action.payload],\n    };\n  case DELETE_FROM_LIST:\n    return {\n      ...state,\n      expenses: state.expenses.filter((each) => each.id !== action.payload),\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n"],"mappings":"AAAA;AACA,SAASA,gBAAT,EAA2BC,0BAA3B,EAAuDC,SAAvD,QAAwE,YAAxE;AAEA,MAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE,EADQ;EAEpBC,QAAQ,EAAE,EAFU;EAGpBC,YAAY,EAAE,EAHM;EAIpBC,IAAI,EAAE;AAJc,CAAtB;;AAOA,MAAMC,MAAM,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BN,aAA0B;EAAA,IAAXO,MAAW;;EAChD,QAAQA,MAAM,CAACC,IAAf;IACA,KAAKV,0BAAL;MACE,OAAO,EACL,GAAGQ,KADE;QAELL,UAAU,EAAE,CAAC,GAAGM,MAAM,CAACE,QAAX;MAFP,CAAP;;IAKF,KAAKV,SAAL;MACE,OAAO,EACL,GAAGO,KADE;QAELJ,QAAQ,EAAE,CAAC,GAAGI,KAAK,CAACJ,QAAV,EAAoBK,MAAM,CAACG,OAA3B,CAFL;QAGLP,YAAY,EAAE,CAACI,MAAM,CAACG,OAAR;MAHT,CAAP;;IAKF,KAAKb,gBAAL;MACE,OAAO,EACL,GAAGS,KADE;QAELJ,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeS,MAAf,CAAuBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACG,OAAnD;MAFL,CAAP;;IAIF;MACE,OAAOJ,KAAP;EAnBF;AAqBD,CAtBD;;AAwBA,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}