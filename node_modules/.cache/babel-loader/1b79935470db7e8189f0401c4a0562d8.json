{"ast":null,"code":"// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { REQUEST_CURRENCIES_SUCCESS } from '../actions';\nconst INITIAL_STATE = {\n  currencies: []\n};\n\nconst wallet = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REQUEST_CURRENCIES_SUCCESS:\n      return { ...state,\n        currencies: [action.response.code]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default wallet;","map":{"version":3,"names":["REQUEST_CURRENCIES_SUCCESS","INITIAL_STATE","currencies","wallet","state","action","type","response","code"],"sources":["/home/alexandre/TRYBE/PROJETOS/sd-026-a-project-trybewallet/src/redux/reducers/wallet.js"],"sourcesContent":["// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { REQUEST_CURRENCIES_SUCCESS } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_CURRENCIES_SUCCESS:\n    return {\n      ...state,\n      currencies: [action.response.code],\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n"],"mappings":"AAAA;AACA,SAASA,0BAAT,QAA2C,YAA3C;AAEA,MAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE;AADQ,CAAtB;;AAIA,MAAMC,MAAM,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BH,aAA0B;EAAA,IAAXI,MAAW;;EAChD,QAAQA,MAAM,CAACC,IAAf;IACA,KAAKN,0BAAL;MACE,OAAO,EACL,GAAGI,KADE;QAELF,UAAU,EAAE,CAACG,MAAM,CAACE,QAAP,CAAgBC,IAAjB;MAFP,CAAP;;IAIF;MACE,OAAOJ,KAAP;EAPF;AASD,CAVD;;AAYA,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}