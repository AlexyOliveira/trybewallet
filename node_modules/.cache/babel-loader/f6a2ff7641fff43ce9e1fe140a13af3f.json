{"ast":null,"code":"// Coloque aqui suas actionsn\nimport getCurrencyApi from '../../services/CURRENCYapi'; // Action types\n\nexport const SAVE_LOGED_EMAIL = 'SAVE_LOGED_EMAIL';\nexport const REQUEST_CURRENCIES = 'REQUEST_CURRENCIES';\nexport const REQUEST_CURRENCIES_SUCCESS = 'REQUEST_CURRENCIES_SUCCESS'; // Action creators\n\nexport const saveLogedEmail = email => ({\n  type: SAVE_LOGED_EMAIL,\n  email\n});\nexport const requestCurrencies = () => ({\n  type: REQUEST_CURRENCIES\n});\nexport const responseCurrenciesSuccess = response => ({\n  type: REQUEST_CURRENCIES_SUCCESS,\n  response\n});\n\nconst fetchCurrencies = () => async dispatch => {\n  // 1 Avisar que o fetch vai começar\n  dispatch(requestCurrencies()); // 2 Fazer a requisição\n\n  const response = getCurrencyApi(); // 3.1 Avisar que a requisição foi um sucesso e entregar a resposta\n\n  dispatch(responseCurrenciesSuccess(response)); // 3.2 Avisar que a requisição foi uma falha\n};","map":{"version":3,"names":["getCurrencyApi","SAVE_LOGED_EMAIL","REQUEST_CURRENCIES","REQUEST_CURRENCIES_SUCCESS","saveLogedEmail","email","type","requestCurrencies","responseCurrenciesSuccess","response","fetchCurrencies","dispatch"],"sources":["/home/alexandre/TRYBE/PROJETOS/sd-026-a-project-trybewallet/src/redux/actions/index.js"],"sourcesContent":["// Coloque aqui suas actionsn\nimport getCurrencyApi from '../../services/CURRENCYapi';\n// Action types\nexport const SAVE_LOGED_EMAIL = 'SAVE_LOGED_EMAIL';\nexport const REQUEST_CURRENCIES = 'REQUEST_CURRENCIES';\nexport const REQUEST_CURRENCIES_SUCCESS = 'REQUEST_CURRENCIES_SUCCESS';\n\n// Action creators\nexport const saveLogedEmail = (email) => ({\n\n  type: SAVE_LOGED_EMAIL,\n  email,\n});\n\nexport const requestCurrencies = () => ({\n\n  type: REQUEST_CURRENCIES,\n\n});\n\nexport const responseCurrenciesSuccess = (response) => ({\n\n  type: REQUEST_CURRENCIES_SUCCESS,\n  response,\n});\n\nconst fetchCurrencies = () => async (dispatch) => {\n  // 1 Avisar que o fetch vai começar\n  dispatch(requestCurrencies());\n  // 2 Fazer a requisição\n  const response = getCurrencyApi();\n\n  // 3.1 Avisar que a requisição foi um sucesso e entregar a resposta\n\n  dispatch(responseCurrenciesSuccess(response));\n  // 3.2 Avisar que a requisição foi uma falha\n};\n"],"mappings":"AAAA;AACA,OAAOA,cAAP,MAA2B,4BAA3B,C,CACA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC,C,CAEP;;AACA,OAAO,MAAMC,cAAc,GAAIC,KAAD,KAAY;EAExCC,IAAI,EAAEL,gBAFkC;EAGxCI;AAHwC,CAAZ,CAAvB;AAMP,OAAO,MAAME,iBAAiB,GAAG,OAAO;EAEtCD,IAAI,EAAEJ;AAFgC,CAAP,CAA1B;AAMP,OAAO,MAAMM,yBAAyB,GAAIC,QAAD,KAAe;EAEtDH,IAAI,EAAEH,0BAFgD;EAGtDM;AAHsD,CAAf,CAAlC;;AAMP,MAAMC,eAAe,GAAG,MAAM,MAAOC,QAAP,IAAoB;EAChD;EACAA,QAAQ,CAACJ,iBAAiB,EAAlB,CAAR,CAFgD,CAGhD;;EACA,MAAME,QAAQ,GAAGT,cAAc,EAA/B,CAJgD,CAMhD;;EAEAW,QAAQ,CAACH,yBAAyB,CAACC,QAAD,CAA1B,CAAR,CARgD,CAShD;AACD,CAVD"},"metadata":{},"sourceType":"module"}