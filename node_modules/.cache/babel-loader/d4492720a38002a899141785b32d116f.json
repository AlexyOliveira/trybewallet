{"ast":null,"code":"var _jsxFileName = \"/home/alexandre/TRYBE/PROJETOS/sd-026-a-project-trybewallet/src/components/WalletForm.jsx\";\nimport React, { Component } from 'react';\nimport Proptypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencies, saveForm } from '../redux/actions';\nimport getFullCurrencyApi from '../services/FullCurrencyAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WalletForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: '',\n      method: '',\n      tag: '',\n      sum: 0\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const currencyAPI = await getFullCurrencyApi();\n      const {\n        dispatch\n      } = this.props;\n      const {\n        id,\n        value,\n        description,\n        currency,\n        method,\n        tag\n      } = this.state;\n      dispatch(saveForm({\n        id,\n        value,\n        description,\n        currency,\n        method,\n        tag,\n        exchangeRates: currencyAPI\n      }));\n      this.setState({\n        id: id + 1\n      }, () => {\n        this.expenseSum();\n      });\n    };\n\n    this.expenseSum = () => {\n      const {\n        expenses\n      } = this.props;\n      expenses.map(each => console.log(each.exchanges));\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dispatch\n    } = this.props;\n    dispatch(fetchCurrencies());\n  }\n\n  render() {\n    const {\n      currencies\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"number\",\n          children: [\"Valor:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            name: \"value\",\n            \"data-testid\": \"value-input\",\n            id: \"number\",\n            type: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: [\"Descri\\xE7\\xE3o:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            name: \"description\",\n            \"data-testid\": \"description-input\",\n            id: \"description\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"currency\",\n          children: [\"Moeda:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: this.handleChange,\n            \"data-testid\": \"currency-input\",\n            name: \"currency\",\n            id: \"currency\",\n            children: currencies.map(currency => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: currency\n            }, currency, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"paymentMethod\",\n          children: [\"M\\xE9todo de pagamento:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: this.handleChange,\n            \"data-testid\": \"method-input\",\n            name: \"method\",\n            id: \"paymentMethod\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Dinheiro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Cart\\xE3o de cr\\xE9dito\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Cart\\xE3o de d\\xE9bito\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: [\"Categoria:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: this.handleChange,\n            \"data-testid\": \"tag-input\",\n            name: \"tag\",\n            id: \"category\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Alimenta\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Lazer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Trabalho\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Transporte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Sa\\xFAde\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Adicionar despesa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nWalletForm.propTypes = {\n  email: Proptypes.array\n}.isRequired;\n\nconst mapStateToProps = globalState => ({\n  currencies: globalState.wallet.currencies,\n  expenses: globalState.wallet.expenses\n});\n\nexport default connect(mapStateToProps)(WalletForm);","map":{"version":3,"names":["React","Component","Proptypes","connect","fetchCurrencies","saveForm","getFullCurrencyApi","WalletForm","state","id","value","description","currency","method","tag","sum","handleChange","event","setState","target","name","handleSubmit","preventDefault","currencyAPI","dispatch","props","exchangeRates","expenseSum","expenses","map","each","console","log","exchanges","componentDidMount","render","currencies","propTypes","email","array","isRequired","mapStateToProps","globalState","wallet"],"sources":["/home/alexandre/TRYBE/PROJETOS/sd-026-a-project-trybewallet/src/components/WalletForm.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport Proptypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencies, saveForm } from '../redux/actions';\nimport getFullCurrencyApi from '../services/FullCurrencyAPI';\n\nclass WalletForm extends Component {\n  state = {\n    id: 0,\n    value: '',\n    description: '',\n    currency: '',\n    method: '',\n    tag: '',\n    sum: 0,\n  };\n\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchCurrencies());\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const currencyAPI = await getFullCurrencyApi();\n    const { dispatch } = this.props;\n    const { id, value, description, currency, method, tag } = this.state;\n    dispatch(saveForm({\n      id,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates: currencyAPI,\n    }));\n    this.setState({\n      id: id + 1,\n    }, () => {\n      this.expenseSum();\n    });\n  };\n\n  expenseSum = () => {\n    const { expenses } = this.props;\n    expenses.map((each) => console.log(each.exchanges));\n  };\n\n  render() {\n    const { currencies } = this.props;\n    return (\n      <div>\n        <form onSubmit={ this.handleSubmit }>\n          <label htmlFor=\"number\">\n            Valor:\n            <input\n              onChange={ this.handleChange }\n              name=\"value\"\n              data-testid=\"value-input\"\n              id=\"number\"\n              type=\"number\"\n            />\n          </label>\n          <label htmlFor=\"description\">\n            Descrição:\n            <input\n              onChange={ this.handleChange }\n              name=\"description\"\n              data-testid=\"description-input\"\n              id=\"description\"\n              type=\"text\"\n            />\n          </label>\n\n          <label htmlFor=\"currency\">\n            Moeda:\n            <select\n              onChange={ this.handleChange }\n              data-testid=\"currency-input\"\n              name=\"currency\"\n              id=\"currency\"\n            >\n              {currencies.map((currency) => (\n                <option key={ currency }>{currency}</option>\n              ))}\n            </select>\n          </label>\n\n          <label htmlFor=\"paymentMethod\">\n            Método de pagamento:\n            <select\n              onChange={ this.handleChange }\n              data-testid=\"method-input\"\n              name=\"method\"\n              id=\"paymentMethod\"\n            >\n              <option>Dinheiro</option>\n              <option>Cartão de crédito</option>\n              <option>Cartão de débito</option>\n            </select>\n          </label>\n\n          <label htmlFor=\"category\">\n            Categoria:\n            <select\n              onChange={ this.handleChange }\n              data-testid=\"tag-input\"\n              name=\"tag\"\n              id=\"category\"\n            >\n              <option>Alimentação</option>\n              <option>Lazer</option>\n              <option>Trabalho</option>\n              <option>Transporte</option>\n              <option>Saúde</option>\n            </select>\n          </label>\n          <button type=\"submit\">Adicionar despesa</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nWalletForm.propTypes = {\n  email: Proptypes.array,\n}.isRequired;\n\nconst mapStateToProps = (globalState) => ({\n  currencies: globalState.wallet.currencies,\n  expenses: globalState.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(WalletForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}