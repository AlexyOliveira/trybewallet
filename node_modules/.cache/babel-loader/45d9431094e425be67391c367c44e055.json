{"ast":null,"code":"var _jsxFileName = \"/home/alexandre/TRYBE/PROJETOS/sd-026-a-project-trybewallet/src/components/WalletForm.jsx\";\nimport React, { Component } from 'react';\nimport Proptypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencies, saveForm, SAVE_EDITED } from '../redux/actions';\nimport getFullCurrencyApi from '../services/FullCurrencyAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WalletForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'dinheiro',\n      tag: 'Alimentação'\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const currencyAPI = await getFullCurrencyApi();\n      const {\n        dispatch\n      } = this.props;\n      const {\n        id,\n        value,\n        description,\n        currency,\n        method,\n        tag\n      } = this.state;\n      dispatch(saveForm({\n        id,\n        value,\n        description,\n        currency,\n        method,\n        tag,\n        exchangeRates: currencyAPI\n      }));\n      this.setState({\n        id: id + 1\n      });\n      this.handleReset();\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        value: '',\n        description: '',\n        currency: 'USD',\n        method: 'dinheiro',\n        tag: 'Alimentação'\n      });\n    };\n\n    this.editInfos = () => {\n      const {\n        dispatch,\n        editId\n      } = this.props;\n      const {\n        value,\n        description,\n        currency,\n        method,\n        tag\n      } = this.state;\n      dispatch({\n        type: SAVE_EDITED,\n        payload: {\n          id: editId.itenEdit,\n          value,\n          description,\n          currency,\n          method,\n          tag\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dispatch\n    } = this.props;\n    dispatch(fetchCurrencies());\n  }\n\n  render() {\n    const {\n      currencies,\n      edit\n    } = this.props;\n    const {\n      description,\n      currency,\n      value,\n      method,\n      tag\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"number\",\n          children: [\"Valor:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            name: \"value\",\n            \"data-testid\": \"value-input\",\n            id: \"number\",\n            type: \"number\",\n            value: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: [\"Descri\\xE7\\xE3o:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            name: \"description\",\n            \"data-testid\": \"description-input\",\n            id: \"description\",\n            type: \"text\",\n            value: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"currency\",\n          children: [\"Moeda:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: this.handleChange,\n            \"data-testid\": \"currency-input\",\n            name: \"currency\",\n            id: \"currency\",\n            value: currency,\n            children: currencies.map(currenc => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: currenc\n            }, currenc, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"paymentMethod\",\n          children: [\"M\\xE9todo de pagamento:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: this.handleChange,\n            \"data-testid\": \"method-input\",\n            name: \"method\",\n            id: \"paymentMethod\",\n            value: method,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Dinheiro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Cart\\xE3o de cr\\xE9dito\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Cart\\xE3o de d\\xE9bito\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: [\"Categoria:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: this.handleChange,\n            \"data-testid\": \"tag-input\",\n            name: \"tag\",\n            id: \"category\",\n            value: tag,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Alimenta\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Lazer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Trabalho\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Transporte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Sa\\xFAde\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), edit ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => this.editInfos(),\n          children: \"Editar despesa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Adicionar despesa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nWalletForm.propTypes = {\n  email: Proptypes.array\n}.isRequired;\n\nconst mapStateToProps = globalState => ({\n  currencies: globalState.wallet.currencies,\n  edit: globalState.wallet.edit,\n  editId: globalState.wallet.editId\n});\n\nexport default connect(mapStateToProps)(WalletForm);","map":{"version":3,"names":["React","Component","Proptypes","connect","fetchCurrencies","saveForm","SAVE_EDITED","getFullCurrencyApi","WalletForm","state","id","value","description","currency","method","tag","handleChange","event","setState","target","name","handleSubmit","preventDefault","currencyAPI","dispatch","props","exchangeRates","handleReset","editInfos","editId","type","payload","itenEdit","componentDidMount","render","currencies","edit","map","currenc","propTypes","email","array","isRequired","mapStateToProps","globalState","wallet"],"sources":["/home/alexandre/TRYBE/PROJETOS/sd-026-a-project-trybewallet/src/components/WalletForm.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport Proptypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencies, saveForm, SAVE_EDITED } from '../redux/actions';\nimport getFullCurrencyApi from '../services/FullCurrencyAPI';\n\nclass WalletForm extends Component {\n  state = {\n    id: 0,\n    value: '',\n    description: '',\n    currency: 'USD',\n    method: 'dinheiro',\n    tag: 'Alimentação',\n  };\n\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchCurrencies());\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const currencyAPI = await getFullCurrencyApi();\n    const { dispatch } = this.props;\n    const { id, value, description, currency, method, tag } = this.state;\n    dispatch(saveForm({\n      id,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates: currencyAPI,\n    }));\n    this.setState({\n      id: id + 1,\n    });\n    this.handleReset();\n  };\n\n  handleReset = () => {\n    this.setState({\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'dinheiro',\n      tag: 'Alimentação',\n    });\n  };\n\n  editInfos = () => {\n    const { dispatch, editId } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n    dispatch({\n      type: SAVE_EDITED,\n      payload: {\n        id: editId.itenEdit,\n        value,\n        description,\n        currency,\n        method,\n        tag,\n      },\n    });\n  };\n\n  render() {\n    const { currencies, edit } = this.props;\n    const { description, currency, value, method, tag } = this.state;\n    return (\n      <div>\n        <form onSubmit={ this.handleSubmit }>\n          <label htmlFor=\"number\">\n            Valor:\n            <input\n              onChange={ this.handleChange }\n              name=\"value\"\n              data-testid=\"value-input\"\n              id=\"number\"\n              type=\"number\"\n              value={ value }\n            />\n          </label>\n          <label htmlFor=\"description\">\n            Descrição:\n            <input\n              onChange={ this.handleChange }\n              name=\"description\"\n              data-testid=\"description-input\"\n              id=\"description\"\n              type=\"text\"\n              value={ description }\n            />\n          </label>\n\n          <label htmlFor=\"currency\">\n            Moeda:\n            <select\n              onChange={ this.handleChange }\n              data-testid=\"currency-input\"\n              name=\"currency\"\n              id=\"currency\"\n              value={ currency }\n            >\n              {currencies.map((currenc) => (\n                <option key={ currenc }>{currenc}</option>\n              ))}\n            </select>\n          </label>\n\n          <label htmlFor=\"paymentMethod\">\n            Método de pagamento:\n            <select\n              onChange={ this.handleChange }\n              data-testid=\"method-input\"\n              name=\"method\"\n              id=\"paymentMethod\"\n              value={ method }\n            >\n              <option>Dinheiro</option>\n              <option>Cartão de crédito</option>\n              <option>Cartão de débito</option>\n            </select>\n          </label>\n\n          <label htmlFor=\"category\">\n            Categoria:\n            <select\n              onChange={ this.handleChange }\n              data-testid=\"tag-input\"\n              name=\"tag\"\n              id=\"category\"\n              value={ tag }\n            >\n              <option>Alimentação</option>\n              <option>Lazer</option>\n              <option>Trabalho</option>\n              <option>Transporte</option>\n              <option>Saúde</option>\n            </select>\n          </label>\n          {edit ? (\n            <button type=\"button\" onClick={ () => this.editInfos() }>\n              Editar despesa\n            </button>\n          ) : (\n            <button type=\"submit\">Adicionar despesa</button>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nWalletForm.propTypes = {\n  email: Proptypes.array,\n}.isRequired;\n\nconst mapStateToProps = (globalState) => ({\n  currencies: globalState.wallet.currencies,\n  edit: globalState.wallet.edit,\n  editId: globalState.wallet.editId,\n});\n\nexport default connect(mapStateToProps)(WalletForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}