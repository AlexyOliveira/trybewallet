{"ast":null,"code":"// Coloque aqui suas actionsn\nimport { type } from '@testing-library/user-event/dist/type';\nimport getCurrencyApi from '../../services/CURRENCYapi';\nimport getFullCurrencyApi from '../../services/FullCurrencyAPI'; // Action types\n\nexport const SAVE_LOGED_EMAIL = 'SAVE_LOGED_EMAIL';\nexport const REQUEST_CURRENCIES = 'REQUEST_CURRENCIES';\nexport const REQUEST_CURRENCIES_SUCCESS = 'REQUEST_CURRENCIES_SUCCESS';\nexport const REQUEST_CURRENCIES_ERROR = 'REQUEST_CURRENCIES_ERROR';\nexport const SAVE_FORM = 'SAVE_FORM';\nexport const REQUEST_FULL_CURRENCIES_SUCCESS = 'REQUEST_FULL_CURRENCIES_SUCCESS'; // Action creators\n\nexport const saveForm = payload => ({\n  type: SAVE_FORM,\n  payload\n});\nexport const saveLogedEmail = email => ({\n  type: SAVE_LOGED_EMAIL,\n  email\n});\nexport const requestCurrencies = () => ({\n  type: REQUEST_CURRENCIES\n});\nexport const responseCurrenciesSuccess = response => ({\n  type: REQUEST_CURRENCIES_SUCCESS,\n  response\n});\nexport const responseCurrenciesError = error => ({\n  type: REQUEST_CURRENCIES_ERROR,\n  error\n});\nexport const fetchCurrencies = () => async dispatch => {\n  // 1 Avisar que o fetch vai começar\n  dispatch(requestCurrencies());\n\n  try {\n    // 2 Fazer a requisição\n    const response = await getCurrencyApi(); // 3.1 Avisar que a requisição foi um sucesso e entregar a resposta\n\n    dispatch(responseCurrenciesSuccess(response));\n  } catch (error) {\n    // 3.2 Avisar que a requisição foi uma falha\n    dispatch(responseCurrenciesError(error));\n  }\n}; // full API\n\nexport const requestFullCurrencies = response => ({\n  type: REQUEST_FULL_CURRENCIES_SUCCESS,\n  response\n});\nexport const fetchFullCurrencies = () => async dispatch => {\n  // 1 Avisar que o fetch vai começar\n  dispatch(requestCurrencies());\n\n  try {\n    // 2 Fazer a requisição\n    const response = await getFullCurrencyApi(); // 3.1 Avisar que a requisição foi um sucesso e entregar a resposta\n\n    dispatch(requestFullCurrencies(response));\n  } catch (error) {\n    // 3.2 Avisar que a requisição foi uma falha\n    dispatch(responseCurrenciesError(error));\n  }\n};","map":{"version":3,"names":["type","getCurrencyApi","getFullCurrencyApi","SAVE_LOGED_EMAIL","REQUEST_CURRENCIES","REQUEST_CURRENCIES_SUCCESS","REQUEST_CURRENCIES_ERROR","SAVE_FORM","REQUEST_FULL_CURRENCIES_SUCCESS","saveForm","payload","saveLogedEmail","email","requestCurrencies","responseCurrenciesSuccess","response","responseCurrenciesError","error","fetchCurrencies","dispatch","requestFullCurrencies","fetchFullCurrencies"],"sources":["/home/alexandre/TRYBE/PROJETOS/sd-026-a-project-trybewallet/src/redux/actions/index.js"],"sourcesContent":["// Coloque aqui suas actionsn\nimport { type } from '@testing-library/user-event/dist/type';\nimport getCurrencyApi from '../../services/CURRENCYapi';\nimport getFullCurrencyApi from '../../services/FullCurrencyAPI';\n// Action types\nexport const SAVE_LOGED_EMAIL = 'SAVE_LOGED_EMAIL';\nexport const REQUEST_CURRENCIES = 'REQUEST_CURRENCIES';\nexport const REQUEST_CURRENCIES_SUCCESS = 'REQUEST_CURRENCIES_SUCCESS';\nexport const REQUEST_CURRENCIES_ERROR = 'REQUEST_CURRENCIES_ERROR';\nexport const SAVE_FORM = 'SAVE_FORM';\nexport const REQUEST_FULL_CURRENCIES_SUCCESS = 'REQUEST_FULL_CURRENCIES_SUCCESS' ; \n\n// Action creators\n\nexport const saveForm = (payload) => ({\n\n  type: SAVE_FORM,\n  payload,\n});\n\nexport const saveLogedEmail = (email) => ({\n\n  type: SAVE_LOGED_EMAIL,\n  email,\n});\n\nexport const requestCurrencies = () => ({\n\n  type: REQUEST_CURRENCIES,\n\n});\n\nexport const responseCurrenciesSuccess = (response) => ({\n\n  type: REQUEST_CURRENCIES_SUCCESS,\n  response,\n});\n\nexport const responseCurrenciesError = (error) => ({\n\n  type: REQUEST_CURRENCIES_ERROR,\n  error,\n});\n\nexport const fetchCurrencies = () => async (dispatch) => {\n  // 1 Avisar que o fetch vai começar\n  dispatch(requestCurrencies());\n\n  try {\n    // 2 Fazer a requisição\n    const response = await getCurrencyApi();\n\n    // 3.1 Avisar que a requisição foi um sucesso e entregar a resposta\n\n    dispatch(responseCurrenciesSuccess(response));\n  } catch (error) {\n    // 3.2 Avisar que a requisição foi uma falha\n    dispatch(responseCurrenciesError(error));\n  }\n};\n\n// full API\n\nexport const requestFullCurrencies = (response) => ({\n\n  type: REQUEST_FULL_CURRENCIES_SUCCESS,\n  response,\n});\n\nexport const fetchFullCurrencies = () => async (dispatch) => {\n  // 1 Avisar que o fetch vai começar\n  dispatch(requestCurrencies());\n\n  try {\n    // 2 Fazer a requisição\n    const response = await getFullCurrencyApi();\n\n    // 3.1 Avisar que a requisição foi um sucesso e entregar a resposta\n\n    dispatch(requestFullCurrencies(response));\n  } catch (error) {\n    // 3.2 Avisar que a requisição foi uma falha\n    dispatch(responseCurrenciesError(error));\n  }\n};\n"],"mappings":"AAAA;AACA,SAASA,IAAT,QAAqB,uCAArB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,kBAAP,MAA+B,gCAA/B,C,CACA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,+BAA+B,GAAG,iCAAxC,C,CAEP;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,OAAD,KAAc;EAEpCV,IAAI,EAAEO,SAF8B;EAGpCG;AAHoC,CAAd,CAAjB;AAMP,OAAO,MAAMC,cAAc,GAAIC,KAAD,KAAY;EAExCZ,IAAI,EAAEG,gBAFkC;EAGxCS;AAHwC,CAAZ,CAAvB;AAMP,OAAO,MAAMC,iBAAiB,GAAG,OAAO;EAEtCb,IAAI,EAAEI;AAFgC,CAAP,CAA1B;AAMP,OAAO,MAAMU,yBAAyB,GAAIC,QAAD,KAAe;EAEtDf,IAAI,EAAEK,0BAFgD;EAGtDU;AAHsD,CAAf,CAAlC;AAMP,OAAO,MAAMC,uBAAuB,GAAIC,KAAD,KAAY;EAEjDjB,IAAI,EAAEM,wBAF2C;EAGjDW;AAHiD,CAAZ,CAAhC;AAMP,OAAO,MAAMC,eAAe,GAAG,MAAM,MAAOC,QAAP,IAAoB;EACvD;EACAA,QAAQ,CAACN,iBAAiB,EAAlB,CAAR;;EAEA,IAAI;IACF;IACA,MAAME,QAAQ,GAAG,MAAMd,cAAc,EAArC,CAFE,CAIF;;IAEAkB,QAAQ,CAACL,yBAAyB,CAACC,QAAD,CAA1B,CAAR;EACD,CAPD,CAOE,OAAOE,KAAP,EAAc;IACd;IACAE,QAAQ,CAACH,uBAAuB,CAACC,KAAD,CAAxB,CAAR;EACD;AACF,CAfM,C,CAiBP;;AAEA,OAAO,MAAMG,qBAAqB,GAAIL,QAAD,KAAe;EAElDf,IAAI,EAAEQ,+BAF4C;EAGlDO;AAHkD,CAAf,CAA9B;AAMP,OAAO,MAAMM,mBAAmB,GAAG,MAAM,MAAOF,QAAP,IAAoB;EAC3D;EACAA,QAAQ,CAACN,iBAAiB,EAAlB,CAAR;;EAEA,IAAI;IACF;IACA,MAAME,QAAQ,GAAG,MAAMb,kBAAkB,EAAzC,CAFE,CAIF;;IAEAiB,QAAQ,CAACC,qBAAqB,CAACL,QAAD,CAAtB,CAAR;EACD,CAPD,CAOE,OAAOE,KAAP,EAAc;IACd;IACAE,QAAQ,CAACH,uBAAuB,CAACC,KAAD,CAAxB,CAAR;EACD;AACF,CAfM"},"metadata":{},"sourceType":"module"}